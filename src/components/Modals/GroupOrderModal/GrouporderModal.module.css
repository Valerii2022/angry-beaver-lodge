.container {
  font-family: 'Roboto', sans-serif;
}

.titleWrapper {
  padding: 12px 20px;
  background-color: var(--shadow-medium);
  border: 1px solid var(--shadow-dark);
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  opacity: 1;
  visibility: visible;
  transition: opacity var(--transition), visibility var(--transition);
}

.title {
  margin-bottom: 8px;
  font-size: 18px;
  font-weight: 500;
}

.description {
  color: var(--icon-color);
  font-size: 14px;
  line-height: 1.5;
}

.label {
  position: relative;
  display: flex;
  justify-content: space-between;
  gap: 16px;
  padding: 20px;
  border-bottom: 1px solid var(--shadow-dark);
  border-right: 1px solid var(--shadow-dark);
  border-left: 1px solid var(--shadow-dark);
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px;
  margin-bottom: 20px;
  opacity: 1;
  visibility: visible;
  transition: opacity var(--transition), visibility var(--transition);
}

.inputWrapper {
  cursor: pointer;
  position: absolute;
  top: 20px;
  left: 20px;
  right: 54px;
  bottom: 20px;
}

.input {
  width: 100%;
  height: 38px;
  padding: 6px 12px;
  background-color: var(--shadow-medium);
  outline: none;
  border: 1px solid var(--shadow-dark);
  border-radius: 4px;
}

.input::placeholder {
  color: var(--accent-color);
  font-size: 16px;
  font-weight: 600;
}

.filesBtn,
.changeBtn {
  color: var(--accent-color);
  border: none;
  outline: none;
  background-color: transparent;
  padding: 0;
}

.copyMessage {
  position: absolute;
  top: 65px;
  left: 20px;
  right: 54px;
  border: 1px solid var(--shadow-dark);
  border-radius: 4px;
  background-color: var(--primary-bg-color);
  z-index: 2000;
  opacity: 1;
  visibility: visible;
  transition: opacity var(--transition), visibility var(--transition);
}

.hidden {
  position: absolute;
  clip: rect(0 0 0 0);
  width: 1px;
  height: px;
  margin: -1px;
  opacity: 0;
  visibility: hidden;
  transition: opacity var(--transition), visibility var(--transition),
    transform var(--transition);
}

.copyMessage::before {
  content: '';
  width: 12px;
  height: 12px;
  display: block;
  background-color: var(--shadow-medium);
  border-left: 1px solid var(--shadow-dark);
  border-top: 1px solid var(--shadow-dark);
  left: 50%;
  border-top-left-radius: 4px;
  transform: translateX(-50%) rotate(45deg);
  position: absolute;
  top: -8px;
}

.copyMessage p {
  padding: 6px 12px;
}

.copyMessage p:first-child {
  border-bottom: 1px solid var(--secondary-bg-color);
  background-color: var(--shadow-medium);
  font-size: 16px;
  font-weight: 600;
}

.copyMessage p:last-child {
  font-size: 14px;
}

.limit {
  padding: 20px;
  border: 1px solid var(--shadow-dark);
  border-radius: 4px;
  margin-bottom: 20px;
  font-size: 18px;
  overflow: hidden;
  display: flex;
}

.openChangeBlock {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  opacity: 1;
  transform: translateX(0);
  visibility: visible;
  transition: opacity var(--transition), visibility var(--transition),
    transform var(--transition);
}

.limitChooseBlock {
  width: 100%;
  transform: translateX(0);
  opacity: 1;
  visibility: visible;
  transition: opacity var(--transition), visibility var(--transition),
    transform var(--transition);
}

.changeBtn {
  font-size: 16px;
  padding: 6px 12px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.limitList {
  width: 100%;
  display: grid;
  grid-template-columns: 3fr 2fr 2fr;
  grid-template-rows: repeat(2, 38px);
  gap: 8px;
  font-size: 16px;
  line-height: 1;
  margin-bottom: 32px;
}

.custom {
  grid-column: 2 / 4;
}

.limitList input {
  display: none;
}

.limitLabel {
  border: 1px solid var(--icon-color);
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 6px 12px;
  width: 100%;
  height: 100%;
}

.limitList input:checked ~ .limitLabel {
  color: var(--primary-bg-color);
  background-color: var(--icon-color);
}

.updateLimitBtn {
  position: relative;
  width: 100%;
  background-color: var(--accent-color);
  border: none;
  outline: none;
  height: 38px;
  color: var(--primary-bg-color);
  padding: 6px 12px;
  border-radius: 4px;
  font-size: 16px;
}

.updateLimitBtn::before {
  content: '';
  width: 100%;
  display: block;
  height: 1px;
  background-color: var(--shadow-dark);
  position: absolute;
  top: -16px;
  left: 0;
}

.textTop {
  font-size: 16px;
  line-height: 1.5;
  margin-bottom: 16px;
}

.textBottom {
  font-size: 12px;
  line-height: 1.2;
  margin-bottom: 16px;
  color: var(--icon-color);
}

.icon {
  fill: currentColor;
}

.helpBtn {
  display: flex;
  justify-content: flex-end;
  gap: 8px;
  outline: none;
  border: none;
  background-color: transparent;
  padding: 0;
  margin-bottom: 8px;
  color: var(--icon-color);
}

.helpIcon {
  height: 16px;
  width: 16px;
  font-size: 14px;
  font-weight: 900;
  background-color: var(--icon-color);
  color: var(--primary-bg-color);
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}

@media screen and (min-width: 375px) {
  .limitList {
    grid-template-columns: 5fr 3fr 3fr 3fr;
  }

  .custom {
    grid-column: 1 / 5;
  }
}

@media screen and (min-width: 460px) {
  .limitList {
    grid-template-columns: 5fr 3fr 3fr 3fr 5fr;
    grid-template-rows: repeat(1, 38px);
  }

  .custom {
    grid-column: 5 / 6;
  }
}

@media screen and (min-width: 768px) {
  .filesBtn {
    cursor: pointer;
    transition: color var(--transition);
  }

  .input {
    cursor: pointer;
  }

  .input::placeholder {
    transition: background-color var(--transition);
  }

  .input:hover.input::placeholder {
    background-color: rgba(16, 114, 211, 0.5);
    color: var(--primary-bg-color);
  }

  .filesBtn:hover {
    color: var(--hover-color);
  }

  .limitLabel {
    cursor: pointer;
    transition: color var(--transition), background-color var(--transition);
  }

  .limitLabel:hover {
    color: var(--primary-bg-color);
    background-color: rgba(77, 79, 82, 0.7);
  }

  .changeBtn {
    cursor: pointer;
    transition: color var(--transition);
  }

  .changeBtn:hover {
    color: var(--hover-color);
  }

  .updateLimitBtn {
    cursor: pointer;
    transition: background-color var(--transition);
  }

  .updateLimitBtn:hover {
    background-color: var(--hover-color);
  }
}
